(def {fun} (\ {args body} {def (head args) (\ (tail args) body)}))
(def {true} 1)
(def {false} 0)
(def {nil} {})
(def {ok} ())
(fun {unpack f xs} {eval (join (list f) xs)})
(fun {pack f & xs} {f xs})
(def {curry} {unpack})
(def {uncurry} {pack})
(fun {rev l} {if (== l {}) {{}} {join (rev (tail l)) (head l)}})
(fun {nth n l} {if (== n 0) {head l} {nth (- n 1) (tail l)}})
(fun {in e l} {if (== l {}) {0} {if (== e (head l)) {1} {in e (tail l)}}})
(fun {last l} {if (== 1 (len l)) {head l} {last (tail l)}})
(fun {flip f x y} {f y x})
(fun {ghost & xs} {eval xs})
(fun {comp f g x} {f (g x)})
(fun {fst l} {eval (head l)})
(fun {snd l} {eval (head (tail l))})
(fun {trd l} {eval (head (head (tail l)))})
(fun {not x} {- 1 x})
(fun {or x y} {+ x y})
(fun {and x y} {* x y})
(fun {let b} {((\ {_} b) ())})
(fun {take n l} {if (== n 0) {nil} {join (head l) ()}})
